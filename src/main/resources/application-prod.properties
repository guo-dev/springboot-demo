# \u9875\u9762\u9ed8\u8ba4\u524d\u7f00\u76ee\u5f55
spring.mvc.view.prefix=/WEB-INF/jsp/
# \u54cd\u5e94\u9875\u9762\u9ed8\u8ba4\u540e\u7f00
spring.mvc.view.suffix=.jsp
server.port=8881
application.field = com springboot guo prod

#\u8fd9\u4e2a\u662f\u652f\u6301freemarker\u7684\u914d\u7f6e
spring.freemarker.allow-request-override=false
spring.freemarker.cache=true
spring.freemarker.check-template-location=true
spring.freemarker.charset=UTF-8
spring.freemarker.content-type=text/html
spring.freemarker.expose-request-attributes=false
spring.freemarker.expose-session-attributes=false
spring.freemarker.expose-spring-macro-helpers=false

#Springboot默认的连接池Hikari
spring.datasource.url=jdbc:mysql://localhost:3306/consult
spring.datasource.url1=jdbc:mysql://192.168.67.139:3306/zg
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=org.gjt.mm.mysql.Driver
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

spring.datasource.max-idle=10
spring.datasource.max-wait=10000
spring.datasource.min-idle=5
spring.datasource.initial-size=5
spring.datasource.validation-query=SELECT 1
spring.datasource.test-on-borrow=false
spring.datasource.test-while-idle=true
spring.datasource.time-between-eviction-runs-millis=18800
spring.datasource.jdbc-interceptors=ConnectionState;SlowQueryReport(threshold=0)


#连接池的配置信息
## 初始化大小，最小，最大
spring.druid.url=jdbc:mysql://192.168.67.139:3307/zg
spring.druid.url1=jdbc:mysql://192.168.67.139:3306/zg
spring.druid.username=root
spring.druid.password=123456
spring.druid.driver-class-name=org.gjt.mm.mysql.Driver
spring.druid.initialSize=2
spring.druid.minIdle=2
spring.druid.maxActive=2
## 配置获取连接等待超时的时间
spring.druid.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.druid.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.druid.minEvictableIdleTimeMillis=300000
spring.druid.validationQuery=SELECT 1 FROM DUAL
spring.druid.testWhileIdle=true
spring.druid.testOnBorrow=false
spring.druid.testOnReturn=false
spring.druid.poolPreparedStatements=true
spring.druid.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.druid.filters=stat,wall
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.druid.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000


mybatis.typeAliasesPackage=com.springboot.guo.bean
mybatis.mapperLocations=classpath:com/springboot/guo/xml/*Mapper.xml


# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=192.168.67.139
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=0

spring.data.mongodb.uri=mongodb://192.168.67.139:27017/xx_db

# spring banner_config config
# 指定字符集，如果不指定，默认是UTF-8
#spring.banner.charset=UTF-8
## 指定Banner 配置文件的位置
#spring.banner.location=banner.txt
##是否显示Banner
##可选值有三个,一般不需要修改
##console:显示在控制台
##log:显示在文件
##off:不显示
#spring.main.banner-mode=console
#spring-boot.version=2.2.2.RELEASE

#日志级别
logging.level.root=info
#所有包下面都以debug级别输出
#logging.level.org.springframework.*=debug

#sql日志
logging.level.com.springboot.guo.dao=debug

#热部署
#热部署生效
spring.devtools.restart.enabled=true
#设置重启的目录
spring.devtools.restart.additional-paths=src/main/java
#classpath目录下的WEB-INF文件夹内容修改不重启
spring.devtools.restart.exclude=WEB-INF/**